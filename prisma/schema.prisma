datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  password    String
  role        Role      @default(AUTHOR)
  avatarUrl   String?
  bio         String?
  posts       Post[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  ADMIN
  EDITOR
  AUTHOR
}

model Post {
  id            String    @id @default(uuid())
  title         String
  slug          String    @unique
  status        PostStatus @default(DRAFT)
  content       Json
  excerpt       String?
  featuredImage String?
  authorId      String
  author        User      @relation(fields: [authorId], references: [id])
  publishedAt   DateTime?
  categories    PostCategory[]
  tags          PostTag[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum PostStatus {
  DRAFT
  PUBLISHED
  SCHEDULED
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  slug      String    @unique
  posts     PostCategory[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Tag {
  id        String    @id @default(uuid())
  name      String    @unique
  slug      String    @unique
  posts     PostTag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model PostCategory {
  postId     String
  categoryId String
  post       Post     @relation(fields: [postId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
}

model PostTag {
  postId String
  tagId  String
  post   Post @relation(fields: [postId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
}

